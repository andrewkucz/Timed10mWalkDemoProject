{"version":3,"sources":["components/TrialsTable.js","components/Dashboard.js","components/PatientsTable.js","components/Title.js","components/Patients.js","components/SinglePatient.js","components/Records.js","components/notfound.js","App.js","serviceWorker.js","index.js"],"names":["TrialsTable","props","rows","trials","Table","size","TableBody","map","row","i","TableRow","key","TableCell","IconButton","aria-label","onClick","onDeleteClick","useStyles","makeStyles","theme","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","appBarSpacer","content","height","overflow","container","paddingTop","spacing","paddingBottom","paper","flexDirection","fixedHeight","rightIcon","marginLeft","button","marginTop","divider","marginBottom","currentPatient","fontWeight","Dashboard","classes","fixedHeightPaper","clsx","React","useState","start","stop","time","setTime","elapsedTime","setElapsedTime","running","setRunning","setTrials","patients","setPatients","name","records","setCurrentPatient","note","setNote","open","message","variant","snackbar","setSnackbar","useEffect","a","axios","get","result","data","getPatients","savedCallback","useRef","callback","Date","now","current","id","setInterval","console","log","clearInterval","Container","maxWidth","className","Grid","item","xs","md","lg","Paper","Typography","component","color","gutterBottom","toFixed","Button","dur","concat","recordTrial","filter","t","index","TextField","placeholder","multiline","value","onChange","event","target","textField","length","record","_id","patient","post","then","res","catch","err","createRecord","Divider","TableHead","r","d","date","getMonth","getDate","getFullYear","average","reduce","total","trial","p","selected","Snackbar","anchorOrigin","vertical","horizontal","onClose","ContentProps","autoHideDuration","PatientsTable","Title","children","width","Patients","newpatient","setNewPatient","required","label","delete","SinglePatient","match","params","modalpaper","position","backgroundColor","palette","background","border","boxShadow","shadows","top","left","transform","Records","setRecords","currentRecord","setCurrentRecord","setOpen","formatDate","dstring","toLocaleString","getAverage","arr","getRecords","openRecord","Modal","aria-labelledby","aria-describedby","undefined","Notfound","appBarShift","enteringScreen","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","link","textDecoration","Boolean","window","location","hostname","ReactDOM","render","CssBaseline","AppBar","Toolbar","edge","noWrap","Drawer","List","to","ListItem","ListItemIcon","ListItemText","primary","exact","path","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.edcc56e0.chunk.js","sourcesContent":["/* eslint-disable no-script-url */\n\nimport React, { useEffect } from 'react';\n//import { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\n\nexport default function TrialsTable(props) {\n\n  let rows = props.trials;\n\n  return (\n      <Table size=\"small\">\n        <TableBody>\n          {rows.map((row,i) => (\n            <TableRow key={i}>\n              <TableCell>{i+1}</TableCell>\n              <TableCell>{row}s</TableCell>\n              <TableCell><IconButton aria-label=\"delete\" onClick={() => props.onDeleteClick(i)}><DeleteIcon/></IconButton></TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n  );\n}\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport PostAddIcon from '@material-ui/icons/PostAdd';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Divider from '@material-ui/core/Divider';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nimport TrialsTable from './TrialsTable';\r\nimport axios from 'axios';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    toolbar: {\r\n      paddingRight: 24, // keep right padding when drawer closed\r\n    },\r\n    toolbarIcon: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: '0 8px',\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n      display: 'none',\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n      flexGrow: 1,\r\n      height: '100vh',\r\n      overflow: 'auto',\r\n    },\r\n    container: {\r\n      paddingTop: theme.spacing(4),\r\n      paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      display: 'flex',\r\n      overflow: 'auto',\r\n      flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n      height: 350,\r\n    },\r\n    rightIcon: {\r\n      marginLeft: theme.spacing(1),\r\n    },\r\n    button: {\r\n      marginTop: theme.spacing(2)\r\n    },\r\n    divider: {\r\n      marginTop: theme.spacing(2),\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    currentPatient: {\r\n      fontWeight: 700\r\n    }\r\n}));\r\n\r\n\r\nexport default function Dashboard() {\r\n\r\n    const classes = useStyles();\r\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n    const [time, setTime] = React.useState({\r\n      start: 0,\r\n      stop: 0\r\n    });\r\n    const [elapsedTime, setElapsedTime] = React.useState(0);\r\n    const [running, setRunning] = React.useState(false)\r\n    const [trials, setTrials] = React.useState([]);\r\n    const [patients, setPatients] = React.useState([]);\r\n    const [currentPatient, setCurrentPatient] = React.useState({\r\n      name: '',\r\n      records: []\r\n    });\r\n    const [note, setNote] = React.useState('');\r\n    const [snackbar, setSnackbar] = React.useState({\r\n      open: false,\r\n      message: '',\r\n      variant: ''\r\n    });\r\n\r\n    React.useEffect(() => { \r\n      const getPatients = async () => {\r\n        const result = await axios.get('/api/patients');\r\n        setPatients(result.data);\r\n      };\r\n      getPatients();\r\n    }, []);\r\n    \r\n    const start = () => {\r\n      console.log('start');\r\n      setRunning(true);\r\n      setElapsedTime(0);\r\n      setTime({...time, start: Date.now()});\r\n    };\r\n\r\n    const stop = () => {\r\n      console.log('stop');\r\n      setElapsedTime(0);\r\n      if(running)\r\n      {\r\n        setRunning(false);\r\n        setTime({...time, stop: Date.now()});\r\n      }\r\n    };\r\n\r\n    const recordTrial = () => {\r\n      let dur = (time.stop-time.start)/1000;\r\n      setTrials(trials.concat([dur]));\r\n      setTime({start: 0, stop: 0});\r\n    };\r\n\r\n    const createRecord = () => {\r\n      let record = {};\r\n      if(currentPatient._id)\r\n      {\r\n        record.patient = currentPatient._id;\r\n        record.trials = trials.map(t => { return {duration: t}});\r\n        record.note = note;\r\n        axios.post('/api/records/add',record).then(res=>{\r\n          console.log(res.data);\r\n          //setCurrentPatient({});\r\n          setNote('');\r\n          setTrials([]);\r\n          setSnackbar({\r\n            open: true,\r\n            variant: 'success',\r\n            message: 'Successfully added record.'\r\n          });\r\n          setCurrentPatient({...currentPatient, records: [res.data].concat(currentPatient.records)})\r\n\r\n\r\n        }).catch(err => {\r\n          console.log(err);\r\n          setSnackbar({\r\n            open: true,\r\n            variant: 'error',\r\n            message: 'Error creating record.'\r\n          });\r\n        });\r\n      }\r\n      else\r\n      {\r\n        setSnackbar({\r\n          open: true,\r\n          variant: 'error',\r\n          message: 'Please select a patient from below for this record.'\r\n        });\r\n      }\r\n    }\r\n\r\n    const handlePatientClick = (patient) => {\r\n      axios.get('/api/records/bypatient/'+patient._id).then(res => {\r\n          setCurrentPatient({...patient, records: res.data})\r\n      }).catch(err => {\r\n        console.log(err);\r\n        setCurrentPatient({...patient, records: []});\r\n      });\r\n\r\n    };\r\n    const handleChange = () => event => {\r\n      setNote(event.target.value);\r\n    };\r\n\r\n    const handleSnackbarClose = () => {\r\n      setSnackbar({...snackbar,open:false});\r\n    }\r\n\r\n    const onDeleteClick = (i) => {\r\n      console.log('deleting ' + i);\r\n      setTrials(trials.filter((t,index) => (index!==i)));\r\n    }\r\n\r\n\r\n    const savedCallback = React.useRef();\r\n    function callback() {\r\n      setElapsedTime(Date.now()-time.start);\r\n    }\r\n    React.useEffect(() => {\r\n      savedCallback.current = callback;\r\n    });\r\n    React.useEffect(() => {\r\n      function tick() {\r\n        console.log('ticking');\r\n        savedCallback.current();\r\n      }\r\n\r\n      if(running)\r\n      {\r\n        let id = setInterval(tick, 10);\r\n        return () => {\r\n          console.log('Clearing interval');\r\n          clearInterval(id);\r\n        };\r\n      }\r\n    }, [running]);\r\n\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={6} md={3} lg={3}>\r\n                    <Paper className={fixedHeightPaper}>\r\n                    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n                      Timer\r\n                    </Typography>\r\n                    <Typography variant=\"h2\" component=\"h3\" gutterBottom>\r\n                      {  (running ? (elapsedTime/1000).toFixed(2) : (time.stop-time.start)/1000) + 's'}\r\n                      </Typography>\r\n                    <Button variant=\"contained\" color={running ? 'secondary' : 'primary'} className={classes.button} onClick={running ? ()=>stop() : ()=>start()}>\r\n                      { running ? 'Stop' : 'Start'}\r\n                    </Button>\r\n                    { !running && time.stop !== 0 && time.start !== 0 &&\r\n                      <Button variant=\"contained\" className={classes.button} onClick={()=>recordTrial()}>\r\n                        Log Trial\r\n                        <ArrowForwardIosIcon className={classes.rightIcon} />\r\n                      </Button>\r\n                    }\r\n                    </Paper>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={3} lg={3}>\r\n                    <Paper className={fixedHeightPaper}>\r\n                      <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n                        Trials\r\n                      </Typography>\r\n                      <TrialsTable trials={trials} onDeleteClick={onDeleteClick} />\r\n                    </Paper>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6} md={3} lg={3}>\r\n                    <Paper className={fixedHeightPaper}>\r\n                      <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n                        Notes\r\n                      </Typography>\r\n                      <TextField\r\n                        id=\"standard-multiline-flexible\"\r\n                        placeholder=\"Optional\"\r\n                        multiline\r\n                        rows=\"11\"\r\n                        value={note}\r\n                        onChange={handleChange()}\r\n                        className={classes.textField}\r\n                      />\r\n\r\n                      { trials.length>0 &&\r\n                      <Button variant=\"contained\" className={classes.button} onClick={()=>createRecord()}>\r\n                        Save Test\r\n                        <PostAddIcon className={classes.rightIcon} />\r\n                      </Button>\r\n                      }\r\n                    </Paper>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6} md={3} lg={3}>\r\n                    <Paper className={fixedHeightPaper}>\r\n                      <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n                        Current Patient\r\n                      </Typography>\r\n                      <Typography className={classes.currentPatient}>\r\n                        {currentPatient.name || 'Please select a patient from below'}\r\n                      </Typography>\r\n\r\n                      { currentPatient.name &&\r\n                      <>\r\n                      <Divider variant=\"middle\" className={classes.divider}/>\r\n                      <Typography>\r\n                        Previous Tests\r\n                      </Typography>\r\n                      <Table size=\"small\">\r\n                          <TableHead>\r\n                            <TableRow>\r\n                              <TableCell>Date</TableCell>\r\n                              <TableCell>Av. Time</TableCell>\r\n                            </TableRow>\r\n                          </TableHead>\r\n                          <TableBody>\r\n                          {currentPatient.records.map(r => {\r\n                            let d = new Date(r.date);\r\n                            let date = `${d.getMonth()+1}/${d.getDate()}/${d.getFullYear()}`;\r\n                            let average = r.trials.reduce((total,trial) => total+trial.duration,0) / r.trials.length;\r\n                            return (\r\n                              <TableRow key={r._id}>\r\n                                <TableCell>{date}</TableCell>\r\n                                <TableCell>{average.toFixed(1)}s</TableCell>\r\n                              </TableRow>\r\n                            )})}\r\n                          </TableBody>\r\n                        </Table>\r\n                        </>\r\n                      }\r\n                      \r\n                    </Paper>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                    <Paper className={classes.paper}>\r\n                        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n                          Patient Selection\r\n                        </Typography>\r\n                        <Table size=\"small\">\r\n                          <TableHead>\r\n                            <TableRow>\r\n                              <TableCell>Name</TableCell>\r\n                            </TableRow>\r\n                          </TableHead>\r\n                          <TableBody>\r\n                            {patients.map(p => (\r\n                              <TableRow key={p._id} selected={p._id === currentPatient._id}>\r\n                                <TableCell onClick={()=>handlePatientClick(p)}>{p.name}</TableCell>\r\n                              </TableRow>\r\n                            ))}\r\n                          </TableBody>\r\n                        </Table>\r\n                    </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n                <Snackbar\r\n                anchorOrigin={{\r\n                  vertical: 'bottom',\r\n                  horizontal: 'center',\r\n                }}\r\n                open={snackbar.open}\r\n                onClose={handleSnackbarClose}\r\n                ContentProps={{'aria-describedby': 'message-id'}}\r\n                message={<span id=\"message-id\">{snackbar.message}</span>}\r\n                autoHideDuration=\"4000\"\r\n                />\r\n            </Container>\r\n          \r\n            \r\n            );\r\n}","/* eslint-disable no-script-url */\n\nimport React from 'react';\n//import { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport axios from 'axios';\n\n\nexport default function PatientsTable(props) {\n  const rows = props.patients;\n  return (\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Name</TableCell>\n            <TableCell></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => (\n            <TableRow key={row._id}>\n              <TableCell>{row.name}</TableCell>\n              <TableCell><IconButton aria-label=\"delete\" onClick={() => props.onDeleteClick(row._id)}><DeleteIcon/></IconButton></TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport PatientsTable from './PatientsTable';\r\nimport Title from './Title';\r\n\r\nimport axios from 'axios';\r\n\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    toolbar: {\r\n      paddingRight: 24, // keep right padding when drawer closed\r\n    },\r\n    toolbarIcon: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: '0 8px',\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n      display: 'none',\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n      flexGrow: 1,\r\n      height: '100vh',\r\n      overflow: 'auto',\r\n    },\r\n    container: {\r\n      paddingTop: theme.spacing(4),\r\n      paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      display: 'flex',\r\n      overflow: 'auto',\r\n      flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n      height: 240,\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n      width: 200\r\n    },\r\n    button: {\r\n      marginTop: theme.spacing(1),\r\n      marginLeft: theme.spacing(1)\r\n    }\r\n}));\r\n\r\n\r\nexport default function Patients() {\r\n\r\n    const classes = useStyles();\r\n    \r\n    const [newpatient, setNewPatient] = React.useState({name: ''});\r\n    const [patients, setPatients] = React.useState([]);\r\n\r\n    React.useEffect(() => { \r\n      const getPatients = async () => {\r\n        const result = await axios.get('/api/patients');\r\n        setPatients(result.data);\r\n      };\r\n      getPatients();\r\n    }, []);\r\n  \r\n    const handleChange = name => event => {\r\n      setNewPatient({ ...newpatient, [name]: event.target.value });\r\n    };\r\n\r\n    const submit = () => {\r\n      console.log('SUBMITTING!');\r\n      axios.post('/api/patients/add',newpatient).then((result) => {\r\n        setPatients(patients.concat([result.data]));\r\n        setNewPatient({name: ''});\r\n      });\r\n    };\r\n\r\n    const onDeleteClick = (id) => {\r\n      axios.delete('/api/patients/delete/'+id).then(res => {\r\n        setPatients(patients.filter(p => p._id !== id));\r\n        console.log(res);\r\n      }).catch(err => console.log(err));\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12}>\r\n                    <Paper className={classes.paper}>\r\n                      <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n                        Add New Patient\r\n                      </Typography>\r\n\r\n                      <div>\r\n                        <TextField\r\n                          required\r\n                          id=\"standard-required\"\r\n                          label=\"Name\"\r\n                          value={newpatient.name}\r\n                          onChange={handleChange('name')}\r\n                          className={classes.textField}\r\n                        />\r\n                        <Button variant=\"contained\" color=\"primary\" size=\"small\" className={classes.button} onClick={submit}>\r\n                          Add\r\n                        </Button>\r\n                      </div>\r\n\r\n                    </Paper>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                    <Paper className={classes.paper}>\r\n                        <Title>Patients</Title>\r\n                        <PatientsTable patients={patients} onDeleteClick={onDeleteClick}/>\r\n                    </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>);\r\n}","import React from 'react';\r\n//import clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    toolbar: {\r\n      paddingRight: 24, // keep right padding when drawer closed\r\n    },\r\n    toolbarIcon: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: '0 8px',\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n      display: 'none',\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n      flexGrow: 1,\r\n      height: '100vh',\r\n      overflow: 'auto',\r\n    },\r\n    container: {\r\n      paddingTop: theme.spacing(4),\r\n      paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      display: 'flex',\r\n      overflow: 'auto',\r\n      flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n      height: 240,\r\n    },\r\n}));\r\n\r\n\r\nexport default function SinglePatient(props) {\r\n\r\n    const classes = useStyles();\r\n    let params = props.match.params;\r\n    let id = params.id;\r\n    \r\n    return (\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12}>\r\n                    <Paper className={classes.paper}>\r\n                        <p>{id}</p>\r\n                    </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>);\r\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport LaunchIcon from '@material-ui/icons/Launch';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Title from './Title';\r\n\r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    toolbar: {\r\n      paddingRight: 24, // keep right padding when drawer closed\r\n    },\r\n    toolbarIcon: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: '0 8px',\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n      display: 'none',\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n      flexGrow: 1,\r\n      height: '100vh',\r\n      overflow: 'auto',\r\n    },\r\n    container: {\r\n      paddingTop: theme.spacing(4),\r\n      paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      display: 'flex',\r\n      overflow: 'auto',\r\n      flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n      height: 240,\r\n    },\r\n    modalpaper: {\r\n      position: 'absolute',\r\n      width: 400,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n      top: `50%`,\r\n      left: `50%`,\r\n      transform: `translate(-50%, -50%)`\r\n    },\r\n}));\r\n\r\n\r\nexport default function Records() {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [records, setRecords] = React.useState([]);\r\n    const [currentRecord, setCurrentRecord] = React.useState({});\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => {\r\n      setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n    const formatDate = (dstring) => {\r\n      let d = new Date(dstring);\r\n      return d.toLocaleString('en-US');\r\n    }\r\n\r\n    const getAverage = (arr) => {\r\n      return (arr.reduce((total,trial) => total+trial.duration,0)) / arr.length;\r\n    }\r\n\r\n    const distanceM = 6;\r\n\r\n    const getVelocity = (arr) => {\r\n      let ave = getAverage(arr);\r\n      return (distanceM/ave);\r\n    }\r\n\r\n    React.useEffect(() => { \r\n      const getRecords = async () => {\r\n        const result = await axios.get('/api/records');\r\n        console.log(result.data);\r\n        setRecords(result.data);\r\n      };\r\n      getRecords();\r\n    }, []);\r\n\r\n    const deleteRecord = (id) => {\r\n      axios.delete('/api/records/delete/'+id).then(res => {\r\n        setRecords(records.filter(r => r._id !== id));\r\n        console.log(res);\r\n      }).catch(err => console.log(err));\r\n    }\r\n\r\n    const openRecord = (record) => {\r\n      if(record.patient !== null)\r\n      {\r\n        setCurrentRecord(record);\r\n        handleOpen();\r\n      }\r\n    }\r\n\r\n    \r\n    return (\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12}>\r\n                    <Paper className={classes.paper}>\r\n                    <Title>Records</Title>\r\n                    <Table size=\"small\">\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell>Date</TableCell>\r\n                          <TableCell>Patient</TableCell>\r\n                          <TableCell># Trials</TableCell>\r\n                          <TableCell>Average Time</TableCell>\r\n                          <TableCell></TableCell>\r\n                          <TableCell></TableCell>\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        {records.map(row => (\r\n                          <TableRow key={row._id}>\r\n                            <TableCell>{formatDate(row.date)}</TableCell>\r\n                            <TableCell>{row.patient !== null ? row.patient.name : '[Patient Deleted]'}</TableCell>\r\n                            <TableCell>{row.trials.length}</TableCell>\r\n                            <TableCell>{getAverage(row.trials).toFixed(2) + 's'}</TableCell>\r\n                            <TableCell><IconButton aria-label=\"view\" onClick={() => openRecord(row)}><LaunchIcon/></IconButton></TableCell>                            \r\n                            <TableCell><IconButton aria-label=\"delete\" onClick={() => deleteRecord(row._id)}><DeleteIcon/></IconButton></TableCell>\r\n                          </TableRow>\r\n                        ))}\r\n                      </TableBody>\r\n                    </Table>\r\n                    </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Modal\r\n                  aria-labelledby=\"simple-modal-title\"\r\n                  aria-describedby=\"simple-modal-description\"\r\n                  open={open}\r\n                  onClose={handleClose}\r\n                >\r\n                  {currentRecord._id!==undefined &&\r\n                    <div className={classes.modalpaper}>\r\n                      <h2>{currentRecord.patient.name}</h2>\r\n                      <h3>{formatDate(currentRecord.date)}</h3>\r\n                      <p><strong>Trials</strong></p>\r\n                      <ol>\r\n                        {currentRecord.trials.map((t,i) => <li key={i}>{`${t.duration}s`}</li>)}\r\n                      </ol>\r\n                      <p>\r\n                      <p><strong>Average: </strong>{getAverage(currentRecord.trials).toFixed(2) + 's'}<br/>\r\n                      <strong>Velocity: </strong>{getVelocity(currentRecord.trials).toFixed(1) + ' m/s'}</p>\r\n                      <p><strong>Note: </strong><br/>{currentRecord.note}</p>\r\n                        \r\n                      </p>\r\n                    </div>\r\n                  }\r\n                </Modal>\r\n\r\n            </Container>);\r\n}","import React from 'react'\r\nconst Notfound = () => <h1>Not found?</h1>\r\nexport default Notfound","import React from 'react';\nimport clsx from 'clsx';\nimport { Route, Link, BrowserRouter as Router, Switch } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport PeopleIcon from '@material-ui/icons/People';\nimport BarChartIcon from '@material-ui/icons/BarChart';\n\nimport Dashboard from './components/Dashboard';\nimport Patients from './components/Patients';\nimport SinglePatient from './components/SinglePatient';\nimport Records from './components/Records';\nimport Notfound from './components/notfound';\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n  link: {\n    textDecoration: 'none',\n    color: 'rgba(0,0,0,0.87)'\n  }\n}));\n\nexport default function App() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Router>\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            Timed 10m Walk Test\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          <Link to=\"/\" className={classes.link}>\n            <ListItem button>\n              <ListItemIcon>\n                <DashboardIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Dashboard\" />\n            </ListItem>\n          </Link>\n          <Link to=\"/patients\" className={classes.link}>\n            <ListItem button>\n              <ListItemIcon>\n                <PeopleIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Patients\" />\n            </ListItem>\n          </Link>\n          <Link to=\"/records\"  className={classes.link}>\n          <ListItem button>\n            <ListItemIcon>\n              <BarChartIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Records\" />\n          </ListItem>\n          </Link>\n        </List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        \n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route exact path=\"/records\" component={Records} />\n          <Route exact path=\"/patients\" component={Patients} />\n          <Route exact path=\"/patient/:id\" component={SinglePatient} />\n          <Route component={Notfound} />\n        </Switch>\n\n      </main>\n    </div>\n  </Router>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}